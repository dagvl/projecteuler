# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# Find the sum of all the even-valued terms in the sequence which do not exceed four million.

def fib(n)
  return 1 if n == 1
  return 2 if n == 2
  
  $cache ||= {} #Oooh.. evil global! Don't do this at home, kids!
  $cache[n] ||= fib(n-1) + fib(n-2)
end

def each_fib(max, &block) 
  1.upto(max) do |i|
    block.call(fib(i))
  end
end

sum = 0
each_fib(1000000) do |i|
  break if i > 4000000 # yeah yeah, hack, i know. 
  sum += i if i.even?
end

puts sum
